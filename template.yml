AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin:  "'*'"
      Auth:
        DefaultAuthorizer: AuthToken
        Authorizers:
          AuthToken:
            FunctionArn: !GetAtt AuthToken.Arn
          AuthRequest:
            FunctionArn: !GetAtt AuthRequest.Arn
            FunctionPayloadType: REQUEST
            Identity:
              Headers:
              - Authorization
          CognitoAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn

  Echo:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./hello
      Handler: handler.hello
      Events:
        HelloAPI:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /hello
            Method: GET

  AuthToken:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./token
      Handler: handler.authorize

  AuthRequest:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./request
      Handler: handler.authorize

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: UserPool1
      LambdaConfig:
        PreSignUp: !GetAtt PreSignup.Arn
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
      - email
      Schema:
      - AttributeDataType: String
        Name: email
        Required: false

  CognitoClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: CognitoClient
      UserPoolId: !Ref CognitoUserPool

  PreSignup:
    Type: AWS::Serverless::Function
    Properties:
      InlineCode: |
        exports.handler = async (event, context, callback) => {
          event.response = { autoConfirmUser: true }
          return event
        }
      Handler: index.handler
      MemorySize: 128
      Runtime: nodejs10.x
      Timeout: 3

  PreSignupPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PreSignup.Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub 'arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}'


Outputs:
  Region:
    Value: !Ref AWS::Region

  ApiId:
    Value: !Ref Api

  ApiUrl:
    Value: !Sub 'https://${Api}.execute-api.${AWS::Region}.amazonaws.com/dev/'

  CognitoUserPoolId:
    Value: !Ref CognitoUserPool

  CognitoClientId:
    Value: !Ref CognitoClient
